continue
@image.save!
continue
@image.save!
@image
continue
key
flash.count
key
n
value
key
n
value
key
continue
audios.first.content_type.in?(%w(audio/mpeg))
audios.first.content_type
continue
audios.first.content_type
audios.first
audios
continue
audios
continue
@audio.save!
@audio = current_user.audios.build(audio_params)
continue
user.update!(activated: true)
user.update(activated: true)
user = User.find_by_id(params[:id])
user.update(activated: true)
continue
user = User.find_by_id(params[:id])
continue
session[:user_id].nil?
continue
current_user.activated?
current_user
continue
current_user.profile.present?
continue
user = User.find_by_id(params[:id])
continue
@user.errors.full_messages
@user.errors[:email]
@user.errors.last
@user.errors.first
@user.errors.count
@user.errors
@user.error_messages
continue
msg
continue
msg
continue
flash.each { |key, value| puts key, value }
flash.each do |key, msg|
flash.first
flash
flash.count
continue
flash.count
flash
continue
session[:user_id]
continue
session[:user_id]
continue
params[:article][:description]
params[:description]
params
continue
@current_user ||= User.find_by_id(session[:user_id])
continue
session[:user_id].nil?
continuesession[:user_id].nil?
continue
User.find_by_id(session[:user_id])
continue
response
continue
session[:user_id]
session
@current_user ||= session[:user]
continue
@current_user ||= session[:user]
continue
session[:user]
continue
params.require(:profile).permit(:full_name, :bio, :dob, :phone_number, :location)
params
